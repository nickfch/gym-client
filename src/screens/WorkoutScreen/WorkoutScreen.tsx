import React from 'react';
import { SafeAreaView, StatusBar } from 'react-native';
import { Workout } from 'src/types/api-autogenerated';
import { Progress } from 'src/components/Progress';
import { WorkoutHeader } from './components/WorkoutHeader';
import { ExerciseList } from './components/ExerciseList';
import { WorkoutScore } from './components/WorkoutScore';
import { WorkoutActions } from './components/WorkoutActions';
import { useStyles } from './WorkoutScreen.styles';
import { WorkoutScreenProps } from './WorkoutScreen.types';
import { useWorkoutLogic } from './WorkoutScreen.logic';

export const WorkoutScreen: React.FC<WorkoutScreenProps> = ({
  route: {
    params: { workoutId },
  },
}) => {
  const styles = useStyles();
  const {
    isLoading,
    selectedWorkout,
    workoutCompleted,
    isWorkoutInProgress,
    exercises,
    completeWorkout,
    currentExerciseId,
    toggleExerciseCompletion,
    workoutScore,
    startWorkout,
    moveToNextExercise,
    refreshWorkout,
  } = useWorkoutLogic(workoutId);

  if (isLoading) {
    return <Progress />;
  }

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar barStyle="dark-content" />
      {selectedWorkout && !isWorkoutInProgress && (
        <WorkoutHeader
          workout={selectedWorkout as unknown as Workout}
          inProgress={isWorkoutInProgress}
          completed={workoutCompleted}
        />
      )}
      <ExerciseList
        exercises={exercises}
        currentExerciseId={currentExerciseId}
        workoutInProgress={isWorkoutInProgress}
        toggleCompletion={toggleExerciseCompletion}
      />
      <WorkoutScore score={workoutScore} completed={workoutCompleted} />
      <WorkoutActions
        workoutInProgress={isWorkoutInProgress}
        workoutCompleted={workoutCompleted}
        onStart={startWorkout}
        onComplete={completeWorkout}
        onNext={moveToNextExercise}
        onRefresh={refreshWorkout}
      />
    </SafeAreaView>
  );
};
