import React, { useCallback } from 'react';
import { useTranslation } from 'react-i18next';
import { useNavigation } from '@react-navigation/native';
import { FeedCard } from 'src/components/FeedCard';
import { CardHeader } from 'src/components/CardHeader';
import { MainStack, WorkoutStack } from 'src/constants/navigation';
import { UserWorkout, Workout, Exercise } from 'src/types/api-autogenerated';

import { WorkoutListItem } from '../WorkoutListItem';

interface UpcomingWorkoutsFeedProps {
  workouts: (UserWorkout & { workout: Workout & { exercises: Exercise[] } })[];
}

export const UpcomingWorkoutsFeed: React.FC<UpcomingWorkoutsFeedProps> = ({
  workouts,
}) => {
  const navigation = useNavigation();
  const { t } = useTranslation();
  const handleViewAllWorkouts = () => {
    // Navigate to all workouts screen
    console.log('Navigate to all workouts');
  };

  const handleWorkoutPress = useCallback((workoutId: string) => {
    navigation.navigate(MainStack.WorkoutStack, {
      screen: WorkoutStack.WorkoutDetailsScreen,
      params: {
        workoutId,
        name:
          workouts.find((w) => w.documentId === workoutId)?.workout.name ??
          'Workout',
      },
    });
  }, []);

  return (
    <FeedCard>
      <CardHeader
        title={t('upcoming-workouts-card--title')}
        actionText={t('upcoming-workouts-card--action-text')}
        onAction={handleViewAllWorkouts}
      />

      {workouts.map((workout) => (
        <WorkoutListItem
          key={workout.documentId}
          workout={workout}
          onPress={handleWorkoutPress}
        />
      ))}
    </FeedCard>
  );
};
